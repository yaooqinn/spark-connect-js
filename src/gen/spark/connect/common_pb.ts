//
// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,import_extension=none,js_import_style=module"
// @generated from file spark/connect/common.proto (package spark.connect, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file spark/connect/common.proto.
 */
export const file_spark_connect_common: GenFile = /*@__PURE__*/
  fileDesc("ChpzcGFyay9jb25uZWN0L2NvbW1vbi5wcm90bxINc3BhcmsuY29ubmVjdCJ1CgxTdG9yYWdlTGV2ZWwSEAoIdXNlX2Rpc2sYASABKAgSEgoKdXNlX21lbW9yeRgCIAEoCBIUCgx1c2Vfb2ZmX2hlYXAYAyABKAgSFAoMZGVzZXJpYWxpemVkGAQgASgIEhMKC3JlcGxpY2F0aW9uGAUgASgFIjYKE1Jlc291cmNlSW5mb3JtYXRpb24SDAoEbmFtZRgBIAEoCRIRCglhZGRyZXNzZXMYAiADKAkilAEKF0V4ZWN1dG9yUmVzb3VyY2VSZXF1ZXN0EhUKDXJlc291cmNlX25hbWUYASABKAkSDgoGYW1vdW50GAIgASgDEh0KEGRpc2NvdmVyeV9zY3JpcHQYAyABKAlIAIgBARITCgZ2ZW5kb3IYBCABKAlIAYgBAUITChFfZGlzY292ZXJ5X3NjcmlwdEIJCgdfdmVuZG9yIjwKE1Rhc2tSZXNvdXJjZVJlcXVlc3QSFQoNcmVzb3VyY2VfbmFtZRgBIAEoCRIOCgZhbW91bnQYAiABKAEi6wIKD1Jlc291cmNlUHJvZmlsZRJRChJleGVjdXRvcl9yZXNvdXJjZXMYASADKAsyNS5zcGFyay5jb25uZWN0LlJlc291cmNlUHJvZmlsZS5FeGVjdXRvclJlc291cmNlc0VudHJ5EkkKDnRhc2tfcmVzb3VyY2VzGAIgAygLMjEuc3BhcmsuY29ubmVjdC5SZXNvdXJjZVByb2ZpbGUuVGFza1Jlc291cmNlc0VudHJ5GmAKFkV4ZWN1dG9yUmVzb3VyY2VzRW50cnkSCwoDa2V5GAEgASgJEjUKBXZhbHVlGAIgASgLMiYuc3BhcmsuY29ubmVjdC5FeGVjdXRvclJlc291cmNlUmVxdWVzdDoCOAEaWAoSVGFza1Jlc291cmNlc0VudHJ5EgsKA2tleRgBIAEoCRIxCgV2YWx1ZRgCIAEoCzIiLnNwYXJrLmNvbm5lY3QuVGFza1Jlc291cmNlUmVxdWVzdDoCOAEiSgoGT3JpZ2luEjQKDXB5dGhvbl9vcmlnaW4YASABKAsyGy5zcGFyay5jb25uZWN0LlB5dGhvbk9yaWdpbkgAQgoKCGZ1bmN0aW9uIjMKDFB5dGhvbk9yaWdpbhIQCghmcmFnbWVudBgBIAEoCRIRCgljYWxsX3NpdGUYAiABKAlCNgoeb3JnLmFwYWNoZS5zcGFyay5jb25uZWN0LnByb3RvUAFaEmludGVybmFsL2dlbmVyYXRlZGIGcHJvdG8z");

/**
 * StorageLevel for persisting Datasets/Tables.
 *
 * @generated from message spark.connect.StorageLevel
 */
export type StorageLevel = Message<"spark.connect.StorageLevel"> & {
  /**
   * (Required) Whether the cache should use disk or not.
   *
   * @generated from field: bool use_disk = 1;
   */
  useDisk: boolean;

  /**
   * (Required) Whether the cache should use memory or not.
   *
   * @generated from field: bool use_memory = 2;
   */
  useMemory: boolean;

  /**
   * (Required) Whether the cache should use off-heap or not.
   *
   * @generated from field: bool use_off_heap = 3;
   */
  useOffHeap: boolean;

  /**
   * (Required) Whether the cached data is deserialized or not.
   *
   * @generated from field: bool deserialized = 4;
   */
  deserialized: boolean;

  /**
   * (Required) The number of replicas.
   *
   * @generated from field: int32 replication = 5;
   */
  replication: number;
};

/**
 * Describes the message spark.connect.StorageLevel.
 * Use `create(StorageLevelSchema)` to create a new message.
 */
export const StorageLevelSchema: GenMessage<StorageLevel> = /*@__PURE__*/
  messageDesc(file_spark_connect_common, 0);

/**
 * ResourceInformation to hold information about a type of Resource.
 * The corresponding class is 'org.apache.spark.resource.ResourceInformation'
 *
 * @generated from message spark.connect.ResourceInformation
 */
export type ResourceInformation = Message<"spark.connect.ResourceInformation"> & {
  /**
   * (Required) The name of the resource
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * (Required) An array of strings describing the addresses of the resource.
   *
   * @generated from field: repeated string addresses = 2;
   */
  addresses: string[];
};

/**
 * Describes the message spark.connect.ResourceInformation.
 * Use `create(ResourceInformationSchema)` to create a new message.
 */
export const ResourceInformationSchema: GenMessage<ResourceInformation> = /*@__PURE__*/
  messageDesc(file_spark_connect_common, 1);

/**
 * An executor resource request.
 *
 * @generated from message spark.connect.ExecutorResourceRequest
 */
export type ExecutorResourceRequest = Message<"spark.connect.ExecutorResourceRequest"> & {
  /**
   * (Required) resource name.
   *
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * (Required) resource amount requesting.
   *
   * @generated from field: int64 amount = 2;
   */
  amount: bigint;

  /**
   * Optional script used to discover the resources.
   *
   * @generated from field: optional string discovery_script = 3;
   */
  discoveryScript?: string;

  /**
   * Optional vendor, required for some cluster managers.
   *
   * @generated from field: optional string vendor = 4;
   */
  vendor?: string;
};

/**
 * Describes the message spark.connect.ExecutorResourceRequest.
 * Use `create(ExecutorResourceRequestSchema)` to create a new message.
 */
export const ExecutorResourceRequestSchema: GenMessage<ExecutorResourceRequest> = /*@__PURE__*/
  messageDesc(file_spark_connect_common, 2);

/**
 * A task resource request.
 *
 * @generated from message spark.connect.TaskResourceRequest
 */
export type TaskResourceRequest = Message<"spark.connect.TaskResourceRequest"> & {
  /**
   * (Required) resource name.
   *
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * (Required) resource amount requesting as a double to support fractional
   * resource requests.
   *
   * @generated from field: double amount = 2;
   */
  amount: number;
};

/**
 * Describes the message spark.connect.TaskResourceRequest.
 * Use `create(TaskResourceRequestSchema)` to create a new message.
 */
export const TaskResourceRequestSchema: GenMessage<TaskResourceRequest> = /*@__PURE__*/
  messageDesc(file_spark_connect_common, 3);

/**
 * @generated from message spark.connect.ResourceProfile
 */
export type ResourceProfile = Message<"spark.connect.ResourceProfile"> & {
  /**
   * (Optional) Resource requests for executors. Mapped from the resource name
   * (e.g., cores, memory, CPU) to its specific request.
   *
   * @generated from field: map<string, spark.connect.ExecutorResourceRequest> executor_resources = 1;
   */
  executorResources: { [key: string]: ExecutorResourceRequest };

  /**
   * (Optional) Resource requests for tasks. Mapped from the resource name
   * (e.g., cores, memory, CPU) to its specific request.
   *
   * @generated from field: map<string, spark.connect.TaskResourceRequest> task_resources = 2;
   */
  taskResources: { [key: string]: TaskResourceRequest };
};

/**
 * Describes the message spark.connect.ResourceProfile.
 * Use `create(ResourceProfileSchema)` to create a new message.
 */
export const ResourceProfileSchema: GenMessage<ResourceProfile> = /*@__PURE__*/
  messageDesc(file_spark_connect_common, 4);

/**
 * @generated from message spark.connect.Origin
 */
export type Origin = Message<"spark.connect.Origin"> & {
  /**
   * (Required) Indicate the origin type.
   *
   * @generated from oneof spark.connect.Origin.function
   */
  function: {
    /**
     * @generated from field: spark.connect.PythonOrigin python_origin = 1;
     */
    value: PythonOrigin;
    case: "pythonOrigin";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message spark.connect.Origin.
 * Use `create(OriginSchema)` to create a new message.
 */
export const OriginSchema: GenMessage<Origin> = /*@__PURE__*/
  messageDesc(file_spark_connect_common, 5);

/**
 * @generated from message spark.connect.PythonOrigin
 */
export type PythonOrigin = Message<"spark.connect.PythonOrigin"> & {
  /**
   * (Required) Name of the origin, for example, the name of the function
   *
   * @generated from field: string fragment = 1;
   */
  fragment: string;

  /**
   * (Required) Callsite to show to end users, for example, stacktrace.
   *
   * @generated from field: string call_site = 2;
   */
  callSite: string;
};

/**
 * Describes the message spark.connect.PythonOrigin.
 * Use `create(PythonOriginSchema)` to create a new message.
 */
export const PythonOriginSchema: GenMessage<PythonOrigin> = /*@__PURE__*/
  messageDesc(file_spark_connect_common, 6);

